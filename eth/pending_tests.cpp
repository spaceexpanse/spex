// Copyright (C) 2021 The Xaya developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include "pending.hpp"

#include <gmock/gmock.h>
#include <gtest/gtest.h>

namespace xayax
{

using testing::ElementsAre;
using testing::IsEmpty;

class PendingDataExtractorTests : public testing::Test
{

public:

  static std::vector<MoveData>
  DecodeMoveLogs (const std::string& txid, const std::string& hexStr)
  {
    return PendingDataExtractor::DecodeMoveLogs (txid, hexStr);
  }

};

namespace
{

/* ************************************************************************** */

using DecodeMoveLogsTests = PendingDataExtractorTests;

TEST_F (DecodeMoveLogsTests, Nothing)
{
  EXPECT_THAT (DecodeMoveLogs ("0x123", "0x"
      "0000000000000000000000000000000000000000000000000000000000000020"
      "0000000000000000000000000000000000000000000000000000000000000000"),
      IsEmpty ());
}

TEST_F (DecodeMoveLogsTests, WithPayment)
{
  MoveData x;
  x.txid = "123";
  x.ns = "g";
  x.name = "game";
  x.mv = R"({"cmd": "admin"})";
  x.metadata = Json::Value (Json::objectValue);
  x.metadata["out"] = Json::Value (Json::objectValue);
  x.metadata["out"]["0x4C06e66138aa94Fa1d03D77d3C6BA79D95450cdE"] = 1234'5678;

  /* This is the real result from one of the multi-moves generated
     by the moves_multi.py integration test.  */
  EXPECT_THAT (DecodeMoveLogs ("0x123", "0x"
      "0000000000000000000000000000000000000000000000000000000000000020"
      "0000000000000000000000000000000000000000000000000000000000000001"

      "0000000000000000000000000000000000000000000000000000000000000020"
      "00000000000000000000000000000000000000000000000000000000000000e0"
      "0000000000000000000000000000000000000000000000000000000000000120"
      "0000000000000000000000000000000000000000000000000000000000000160"
      "0000000000000000000000000000000000000000000000000000000000000001"
      "000000000000000000000000df76f81b58cc75806de90b35bfd57a1aad5ab53f"
      "0000000000000000000000000000000000000000000000000000000000bc614e"
      "0000000000000000000000004c06e66138aa94fa1d03d77d3c6ba79d95450cde"
      "0000000000000000000000000000000000000000000000000000000000000001"
      "6700000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000004"
      "67616d6500000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000010"
      "7b22636d64223a202261646d696e227d00000000000000000000000000000000"),

      ElementsAre (x));
}

TEST_F (DecodeMoveLogsTests, Two)
{
  MoveData a;
  a.txid = "123";
  a.ns = "p";
  a.name = "game";
  a.mv = R"({"g": {"game": 4}, "cmd": 2})";
  a.metadata = Json::Value (Json::objectValue);
  a.metadata["out"] = Json::Value (Json::objectValue);

  MoveData b = a;
  b.ns = "g";

  /* This is the real result from one of the multi-moves generated
     by the moves_multi.py integration test.  */
  EXPECT_THAT (DecodeMoveLogs ("0x123", "0x"
      "0000000000000000000000000000000000000000000000000000000000000020"
      "0000000000000000000000000000000000000000000000000000000000000002"
      
      "0000000000000000000000000000000000000000000000000000000000000040"
      "00000000000000000000000000000000000000000000000000000000000001e0"

      "00000000000000000000000000000000000000000000000000000000000000e0"
      "0000000000000000000000000000000000000000000000000000000000000120"
      "0000000000000000000000000000000000000000000000000000000000000160"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "000000000000000000000000d9930ac7a0e67fd75e6bf999af87947d6b1e84f8"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000001"
      "7000000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000004"
      "67616d6500000000000000000000000000000000000000000000000000000000"
      "000000000000000000000000000000000000000000000000000000000000001c"
      "7b2267223a207b2267616d65223a20347d2c2022636d64223a20327d00000000"

      "00000000000000000000000000000000000000000000000000000000000000e0"
      "0000000000000000000000000000000000000000000000000000000000000120"
      "0000000000000000000000000000000000000000000000000000000000000160"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "000000000000000000000000d9930ac7a0e67fd75e6bf999af87947d6b1e84f8"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000001"
      "6700000000000000000000000000000000000000000000000000000000000000"
      "0000000000000000000000000000000000000000000000000000000000000004"
      "67616d6500000000000000000000000000000000000000000000000000000000"
      "000000000000000000000000000000000000000000000000000000000000001c"
      "7b2267223a207b2267616d65223a20347d2c2022636d64223a20327d00000000"),

      ElementsAre (a, b));
}

/* ************************************************************************** */

} // anonymous namespace
} // namespace xayax
